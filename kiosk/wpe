#!/usr/bin/env bash

# (c) 2019 Andrea Giammarchi - @WebReflection - (ISC)

if [ "$USER" != "root" ]; then
  echo "you need to be $(tput bold)root$(tput sgr0)";
  exit 1;
fi

cd /home/alarm
usermod -a -G video alarm

# bootstrap pacman
bash <(curl -s https://archibold.io/kiosk/utils/init)

# install wpe for arch64
# curl -LO https://archibold.io/kiosk/utils/wpe-aarch64
# mv wpe-aarch64 wpe-install
mv utils/wpe-install wpe-install

chmod a+x wpe-install
chown alarm:alarm wpe-install
echo -e "Please run $(tput bold)./wpe-install$(tput sgr0)"
su alarm
rm wpe-install

# install specific driver
while ! pacman -S --needed --noconfirm \
  mesa libva-vdpau-driver libva-mesa-driver mesa-vdpau
do
  :
done

# install all dependencies and optimize
bash <(curl -s https://archibold.io/kiosk/utils/dependencies-wpe)

# automatic login
bash <(curl -s https://archibold.io/kiosk/utils/login)

# download a minimalistic full screen browser
bash <(curl -s https://archibold.io/kiosk/utils/index)

# setup the weston-config
bash <(curl -s https://archibold.io/kiosk/utils/wpe)

# bootstrap xorg from .bashrc
bash <(curl -s https://archibold.io/kiosk/utils/bashrc-wpe)

# avoid initial message
touch .hushlogin
chown alarm:alarm .hushlogin

# configure boot & GPU options
echo -e "Is this a $(tput bold)Raspberry Pi 3/3+$(tput sgr0) ? [y/N]
"
  read -n1 -s raspberrypi
  if [ "$raspberrypi" = "y" ] || [ "$raspberrypi" = "Y" ]; then
    raspberrypi=""
    echo -e "Would you like $(tput bold)linux-aarch64-raspberrypi-bin$(tput sgr0) ?

It uses defaults from Raspbian so touch screen and other stuff might work better.
You can always install it later on if you think it's needed.

  yay -S linux-aarch64-raspberrypi-bin

Would you like to install it now? [y/N]"
    read -n1 -s raspberrypi
    if [ "$raspberrypi" = "y" ] || [ "$raspberrypi" = "Y" ]; then
      yes y | yay -S --needed linux-aarch64-raspberrypi-bin
    fi
    bash <(curl -s https://archibold.io/kiosk/pi3-boot)
  fi

echo -e "$(tput bold)WPE Kiosk$(tput sgr0) installation completed"
echo -e "feel free to type: $(tput bold)reboot$(tput sgr0)"
